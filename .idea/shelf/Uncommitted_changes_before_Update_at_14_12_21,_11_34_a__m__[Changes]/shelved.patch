Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>com.uptc</groupId>\n    <artifactId>ProcessSimulator</artifactId>\n    <version>1.0-SNAPSHOT</version>\n\n    <properties>\n        <maven.compiler.source>11</maven.compiler.source>\n        <maven.compiler.target>11</maven.compiler.target>\n    </properties>\n\n    <dependencies>\n        <!-- https://mvnrepository.com/artifact/com.formdev/flatlaf -->\n        <dependency>\n            <groupId>com.formdev</groupId>\n            <artifactId>flatlaf</artifactId>\n            <version>1.6.4</version>\n            <scope>runtime</scope>\n        </dependency>\n    </dependencies>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision 20661f43c236e292e8b67bddd063e9c31207e79c)
+++ b/pom.xml	(date 1639498334487)
@@ -19,7 +19,11 @@
             <groupId>com.formdev</groupId>
             <artifactId>flatlaf</artifactId>
             <version>1.6.4</version>
-            <scope>runtime</scope>
+        </dependency>
+        <dependency>
+            <groupId>com.formdev</groupId>
+            <artifactId>flatlaf-intellij-themes</artifactId>
+            <version>1.6.5</version>
         </dependency>
     </dependencies>
 </project>
\ No newline at end of file
Index: src/main/java/so/simulator/controllers/Controller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package so.simulator.controllers;\n\nimport so.simulator.views.GuiManager;\n\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\n\npublic class Controller implements ActionListener {\n\n    private GuiManager guiManager;\n\n    public Controller() {\n        this.guiManager = new GuiManager(this);\n    }\n\n    @Override\n    public void actionPerformed(ActionEvent e) {\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/so/simulator/controllers/Controller.java b/src/main/java/so/simulator/controllers/Controller.java
--- a/src/main/java/so/simulator/controllers/Controller.java	(revision 20661f43c236e292e8b67bddd063e9c31207e79c)
+++ b/src/main/java/so/simulator/controllers/Controller.java	(date 1639495799371)
@@ -1,20 +1,37 @@
 package so.simulator.controllers;
 
+import so.simulator.models.ProcessStateManager;
 import so.simulator.views.GuiManager;
+import so.util.observer.Observer;
+import so.util.observer.ObserverEvent;
 
 import java.awt.event.ActionEvent;
 import java.awt.event.ActionListener;
 
-public class Controller implements ActionListener {
+public class Controller implements ActionListener, Observer {
 
     private GuiManager guiManager;
+    private ProcessStateManager stateManager;
 
     public Controller() {
         this.guiManager = new GuiManager(this);
+        this.stateManager = new ProcessStateManager(this);
     }
 
     @Override
     public void actionPerformed(ActionEvent e) {
 
+    }
+
+    @Override
+    public void update(ObserverEvent event) {
+        switch (event){
+            case UPDATE_TIME:
+                break;
+            case BLOCK:
+                break;
+            case TIME_EXPIRATION:
+                break;
+        }
     }
 }
Index: src/main/java/so/simulator/models/CPU.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package so.simulator.models;\n\nimport so.util.observer.Observable;\nimport so.util.observer.Observer;\nimport so.util.observer.ObserverEvent;\n\nimport java.util.concurrent.TimeUnit;\n\npublic class CPU extends Thread {\n\n    private final Observable observable = new Observable();\n    public static final int TIME_STEP = 1;\n\n    private int executionTime;\n    private int executionTimeRemaining;\n\n    private Process processRunning;\n\n    public CPU(int executionTime) {\n        this.executionTime = executionTime;\n    }\n\n    public void runProcess(Process process) throws ProcessException {\n        if (process == null) throw new ProcessException();\n        reset();\n        processRunning = process;\n        start();\n    }\n\n    @Override\n    public void run() {\n        try {\n            while (processRunning.isAlive() && hasTime()) {\n                //Resta el tiempo de ejecuciÃ³n para el proceso actual\n                executionTimeRemaining -= TIME_STEP;\n                //ejecuta el proceso el tiempo asignado\n                processRunning.run(TIME_STEP);\n                //duerme el hilo segundos\n                TimeUnit.SECONDS.sleep(TIME_STEP);\n                //notifica a los observadores que actualicen la vista\n                observable.notify(ObserverEvent.UPDATE_TIME);\n            }\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n        if (processRunning.isAlive()){\n            observable.notify(ObserverEvent.TIME_EXPIRATION);\n        }else {\n            observable.notify(ObserverEvent.BLOCK);\n        }\n    }\n\n    private boolean hasTime() {\n        return executionTimeRemaining > 0;\n    }\n\n    public void addObserver(Observer observer) {\n        observable.addObserver(observer);\n    }\n\n    @Override\n    public void interrupt(){\n        super.interrupt();\n        reset();\n    }\n\n    public Process reset(){\n        executionTimeRemaining = executionTime;\n        return processRunning;\n    }\n\n    public int getExecutionTime() {\n        return executionTime;\n    }\n\n    public int getExecutionTimeRemaining() {\n        return executionTimeRemaining;\n    }\n\n    public Process getProcessRunning() {\n        return processRunning;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/so/simulator/models/CPU.java b/src/main/java/so/simulator/models/CPU.java
--- a/src/main/java/so/simulator/models/CPU.java	(revision 20661f43c236e292e8b67bddd063e9c31207e79c)
+++ b/src/main/java/so/simulator/models/CPU.java	(date 1639495728687)
@@ -1,5 +1,7 @@
 package so.simulator.models;
 
+import so.simulator.models.exceptions.CPUException;
+import so.simulator.models.exceptions.ErrorCode;
 import so.util.observer.Observable;
 import so.util.observer.Observer;
 import so.util.observer.ObserverEvent;
@@ -16,12 +18,16 @@
 
     private Process processRunning;
 
+    public CPU(Observer observer) {
+        observable.addObserver(observer);
+    }
+
     public CPU(int executionTime) {
         this.executionTime = executionTime;
     }
 
-    public void runProcess(Process process) throws ProcessException {
-        if (process == null) throw new ProcessException();
+    public void runProcess(Process process) throws CPUException {
+        if (process == null) throw new CPUException(ErrorCode.NO_ASSIGNED_PROCESS);
         reset();
         processRunning = process;
         start();
@@ -80,4 +86,8 @@
     public Process getProcessRunning() {
         return processRunning;
     }
+
+    public void setExecutionTime(int executionTime) {
+        this.executionTime = executionTime;
+    }
 }
Index: src/main/java/so/simulator/views/GuiManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package so.simulator.views;\n\nimport so.simulator.views.panels.PanelAdminUCP;\nimport so.simulator.views.panels.PanelCreateProcess;\nimport so.simulator.views.panels.PanelProcessExecution;\n\nimport javax.swing.*;\nimport java.awt.event.ActionListener;\n\npublic class GuiManager extends JFrame {\n\n    private ActionListener listener;\n    private PanelAdminUCP panelAdminUCP;\n    private PanelCreateProcess panelCreateProcess;\n    private PanelProcessExecution panelProcessExecution;\n\n    public GuiManager(ActionListener listener) {\n        super(Constants.tittle);\n        this.listener = listener;\n        this.panelAdminUCP = new PanelAdminUCP(listener);\n        this.panelCreateProcess = new PanelCreateProcess(listener);\n        this.panelProcessExecution = new PanelProcessExecution(listener);\n        this.init();\n    }\n\n    private void init() {\n        setSize(Constants.SIZE);\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        setResizable(false);\n        setLocationRelativeTo(null);\n        setVisible(true);\n        this.fill();\n    }\n\n    private void fill() {\n        this.setLayout(null);\n        this.panelAdminUCP.setBounds(20, 20, 360, 100);\n        this.panelCreateProcess.setBounds(400, 20, 360, 100);\n        add(panelAdminUCP);\n        add(panelCreateProcess);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/so/simulator/views/GuiManager.java b/src/main/java/so/simulator/views/GuiManager.java
--- a/src/main/java/so/simulator/views/GuiManager.java	(revision 20661f43c236e292e8b67bddd063e9c31207e79c)
+++ b/src/main/java/so/simulator/views/GuiManager.java	(date 1639499693483)
@@ -1,5 +1,9 @@
 package so.simulator.views;
 
+import com.formdev.flatlaf.FlatIntelliJLaf;
+import com.formdev.flatlaf.intellijthemes.FlatArcIJTheme;
+import com.formdev.flatlaf.intellijthemes.FlatLightFlatIJTheme;
+import com.formdev.flatlaf.intellijthemes.materialthemeuilite.FlatNightOwlIJTheme;
 import so.simulator.views.panels.PanelAdminUCP;
 import so.simulator.views.panels.PanelCreateProcess;
 import so.simulator.views.panels.PanelProcessExecution;
Index: src/main/java/so/simulator/models/ProcessStateManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package so.simulator.models;\n\nimport so.util.observer.Observer;\nimport so.util.queue.Queue;\n\nimport java.util.ArrayList;\nimport java.util.Comparator;\n\npublic class ProcessStateManager {\n\n    private ArrayList<Process> blockedList;\n    private Queue<Process> readyQueue;\n    private CPU cpu;\n\n    public ProcessStateManager(int executionTime) {\n        //crea la lista de bloqueados\n        blockedList = new ArrayList<>();\n        //Crea una cola que compara los procesos por su nombre\n        readyQueue = new Queue<>(Comparator.comparing(Process::getProcessName));\n        //Crea la el objeto encargado de manejar el turno de uso de la CPU\n        cpu = new CPU(executionTime);\n    }\n\n    /**\n     * Obtiene la lista de los nombres de los procesos\n     * que se encuentran en la cola de espera\n     * @return lista de nombres de procesos\n     */\n    public ArrayList<String> getReadyQueue(){\n        ArrayList<String> queue = new ArrayList<>();\n        for (Process p : readyQueue) {\n            queue.add(p.getProcessName());\n        }\n        return queue;\n    }\n\n    /**\n     * Obtiene la lista de los nombres de los procesos\n     * que se encuentran en la lista de procesos bloqueados\n     * @return lista de nombres de procesos\n     */\n    public ArrayList<String> getBlockedList(){\n        ArrayList<String> list = new ArrayList<>();\n        blockedList.forEach(process -> list.add(process.getProcessName()));\n        return list;\n    }\n\n    public void addCPUObserver(Observer observer){\n        cpu.addObserver(observer);\n    }\n\n    /**\n     * Crea un nuevo proceso y lo ubica en la cola de espera\n     * @param secondsOfExecution Los segundos que se ejecutarÃ¡ este procesos\n     */\n    public void addProcess(int secondsOfExecution){\n        Process process = new Process(secondsOfExecution);\n        readyQueue.push(process);\n    }\n\n    /**\n     *\n     */\n    public void dispatchProcess(){\n        try {\n            cpu.runProcess(readyQueue.poll());\n        } catch (ProcessException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public void blockProcess(){\n        blockedList.add(cpu.reset());\n    }\n\n    public void wakeUpProcess(String processName){\n        // TODO: 14/12/21 Testear cÃ³digo\n        Process process = blockedList.stream()\n                .filter(p -> p.getProcessName().equals(processName))\n                .findFirst().orElse(null);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/so/simulator/models/ProcessStateManager.java b/src/main/java/so/simulator/models/ProcessStateManager.java
--- a/src/main/java/so/simulator/models/ProcessStateManager.java	(revision 20661f43c236e292e8b67bddd063e9c31207e79c)
+++ b/src/main/java/so/simulator/models/ProcessStateManager.java	(date 1639496521219)
@@ -1,5 +1,7 @@
 package so.simulator.models;
 
+import so.simulator.models.exceptions.CPUException;
+import so.simulator.models.exceptions.ErrorCode;
 import so.util.observer.Observer;
 import so.util.queue.Queue;
 
@@ -12,13 +14,15 @@
     private Queue<Process> readyQueue;
     private CPU cpu;
 
-    public ProcessStateManager(int executionTime) {
+    public ProcessStateManager(Observer observer) {
         //crea la lista de bloqueados
         blockedList = new ArrayList<>();
+
         //Crea una cola que compara los procesos por su nombre
         readyQueue = new Queue<>(Comparator.comparing(Process::getProcessName));
+
         //Crea la el objeto encargado de manejar el turno de uso de la CPU
-        cpu = new CPU(executionTime);
+        cpu = new CPU(observer);
     }
 
     /**
@@ -61,12 +65,10 @@
     /**
      *
      */
-    public void dispatchProcess(){
-        try {
-            cpu.runProcess(readyQueue.poll());
-        } catch (ProcessException e) {
-            e.printStackTrace();
-        }
+    public void dispatchProcess() throws CPUException {
+        Process process = readyQueue.poll();
+        if (process == null) throw new CPUException(ErrorCode.NO_PROCESS_READY);
+        cpu.runProcess(process);
     }
 
     public void blockProcess(){
@@ -79,4 +81,8 @@
                 .filter(p -> p.getProcessName().equals(processName))
                 .findFirst().orElse(null);
     }
+
+    public boolean hasProcessesReady(){
+        return !readyQueue.isEmpty();
+    }
 }
Index: .idea/jarRepositories.xml
===================================================================
diff --git a/.idea/jarRepositories.xml b/.idea/jarRepositories.xml
deleted file mode 100644
--- a/.idea/jarRepositories.xml	(revision 20661f43c236e292e8b67bddd063e9c31207e79c)
+++ /dev/null	(revision 20661f43c236e292e8b67bddd063e9c31207e79c)
@@ -1,20 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="RemoteRepositoriesConfiguration">
-    <remote-repository>
-      <option name="id" value="central" />
-      <option name="name" value="Central Repository" />
-      <option name="url" value="https://repo.maven.apache.org/maven2" />
-    </remote-repository>
-    <remote-repository>
-      <option name="id" value="central" />
-      <option name="name" value="Maven Central repository" />
-      <option name="url" value="https://repo1.maven.org/maven2" />
-    </remote-repository>
-    <remote-repository>
-      <option name="id" value="jboss.community" />
-      <option name="name" value="JBoss Community repository" />
-      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
-    </remote-repository>
-  </component>
-</project>
\ No newline at end of file
Index: src/main/java/so/simulator/models/ProcessException.java
===================================================================
diff --git a/src/main/java/so/simulator/models/ProcessException.java b/src/main/java/so/simulator/models/ProcessException.java
deleted file mode 100644
--- a/src/main/java/so/simulator/models/ProcessException.java	(revision 20661f43c236e292e8b67bddd063e9c31207e79c)
+++ /dev/null	(revision 20661f43c236e292e8b67bddd063e9c31207e79c)
@@ -1,10 +0,0 @@
-package so.simulator.models;
-
-public class ProcessException extends Exception{
-
-    public static final String NO_ASSIGNED_PROCESS = "No hay procesos asignados para la ejecuciÃ³n";
-
-    public ProcessException() {
-        super(NO_ASSIGNED_PROCESS);
-    }
-}
Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	(revision 20661f43c236e292e8b67bddd063e9c31207e79c)
+++ /dev/null	(revision 20661f43c236e292e8b67bddd063e9c31207e79c)
@@ -1,8 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
-# Editor-based HTTP Client requests
-/httpRequests/
-# Datasource local storage ignored files
-/dataSources/
-/dataSources.local.xml
Index: .idea/runConfigurations.xml
===================================================================
diff --git a/.idea/runConfigurations.xml b/.idea/runConfigurations.xml
deleted file mode 100644
--- a/.idea/runConfigurations.xml	(revision 20661f43c236e292e8b67bddd063e9c31207e79c)
+++ /dev/null	(revision 20661f43c236e292e8b67bddd063e9c31207e79c)
@@ -1,10 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="RunConfigurationProducerService">
-    <option name="ignoredProducers">
-      <set>
-        <option value="com.android.tools.idea.compose.preview.runconfiguration.ComposePreviewRunConfigurationProducer" />
-      </set>
-    </option>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/uiDesigner.xml
===================================================================
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
deleted file mode 100644
--- a/.idea/uiDesigner.xml	(revision 20661f43c236e292e8b67bddd063e9c31207e79c)
+++ /dev/null	(revision 20661f43c236e292e8b67bddd063e9c31207e79c)
@@ -1,124 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="Palette2">
-    <group name="Swing">
-      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
-      </item>
-      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
-      </item>
-      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
-        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
-        <initial-values>
-          <property name="text" value="Button" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="RadioButton" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="CheckBox" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="Label" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
-          <preferred-size width="200" height="200" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
-          <preferred-size width="200" height="200" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
-      </item>
-      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
-          <preferred-size width="-1" height="20" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
-      </item>
-      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
-      </item>
-    </group>
-  </component>
-</project>
\ No newline at end of file
Index: src/main/java/so/simulator/models/exceptions/CPUException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/so/simulator/models/exceptions/CPUException.java b/src/main/java/so/simulator/models/exceptions/CPUException.java
new file mode 100644
--- /dev/null	(date 1639496521179)
+++ b/src/main/java/so/simulator/models/exceptions/CPUException.java	(date 1639496521179)
@@ -0,0 +1,22 @@
+package so.simulator.models.exceptions;
+
+import so.simulator.models.exceptions.ErrorCode;
+
+public class CPUException extends Exception{
+
+    private final ErrorCode code;
+
+    public CPUException(ErrorCode code) {
+        super(code.description);
+        this.code = code;
+    }
+
+    public CPUException(String message, Throwable cause, ErrorCode code) {
+        super(message, cause);
+        this.code = code;
+    }
+
+    public ErrorCode getCode() {
+        return code;
+    }
+}
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"CompilerConfiguration\">\n    <annotationProcessing>\n      <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\n        <sourceOutputDir name=\"target/generated-sources/annotations\" />\n        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\n        <outputRelativeToContentRoot value=\"true\" />\n        <module name=\"ProcessSimulator\" />\n      </profile>\n    </annotationProcessing>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
--- a/.idea/compiler.xml	(revision 20661f43c236e292e8b67bddd063e9c31207e79c)
+++ b/.idea/compiler.xml	(date 1639497953967)
@@ -9,5 +9,8 @@
         <module name="ProcessSimulator" />
       </profile>
     </annotationProcessing>
+    <bytecodeTargetLevel>
+      <module name="ProcessSimulator" target="11" />
+    </bytecodeTargetLevel>
   </component>
 </project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\n  <component name=\"MavenProjectsManager\">\n    <option name=\"originalFiles\">\n      <list>\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"11\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/out\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 20661f43c236e292e8b67bddd063e9c31207e79c)
+++ b/.idea/misc.xml	(date 1639497953987)
@@ -1,6 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ExternalStorageConfigurationManager" enabled="true" />
   <component name="MavenProjectsManager">
     <option name="originalFiles">
       <list>
@@ -8,7 +7,5 @@
       </list>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="11" project-jdk-type="JavaSDK">
-    <output url="file://$PROJECT_DIR$/out" />
-  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="11" project-jdk-type="JavaSDK" />
 </project>
\ No newline at end of file
Index: .idea/libraries/Maven__com_formdev_flatlaf_1_6_4.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_formdev_flatlaf_1_6_4.xml b/.idea/libraries/Maven__com_formdev_flatlaf_1_6_4.xml
new file mode 100644
--- /dev/null	(date 1639497953959)
+++ b/.idea/libraries/Maven__com_formdev_flatlaf_1_6_4.xml	(date 1639497953959)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.formdev:flatlaf:1.6.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/formdev/flatlaf/1.6.4/flatlaf-1.6.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/formdev/flatlaf/1.6.4/flatlaf-1.6.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/formdev/flatlaf/1.6.4/flatlaf-1.6.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ProcessSimulator.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ProcessSimulator.iml b/ProcessSimulator.iml
new file mode 100644
--- /dev/null	(date 1639498395155)
+++ b/ProcessSimulator.iml	(date 1639498395155)
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_11">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Maven: com.formdev:flatlaf:1.6.4" level="project" />
+    <orderEntry type="library" name="Maven: com.formdev:flatlaf-intellij-themes:1.6.5" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: src/main/java/so/simulator/models/exceptions/ErrorCode.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/so/simulator/models/exceptions/ErrorCode.java b/src/main/java/so/simulator/models/exceptions/ErrorCode.java
new file mode 100644
--- /dev/null	(date 1639495448223)
+++ b/src/main/java/so/simulator/models/exceptions/ErrorCode.java	(date 1639495448223)
@@ -0,0 +1,13 @@
+package so.simulator.models.exceptions;
+
+public enum ErrorCode {
+
+    NO_ASSIGNED_PROCESS("No hay procesos asignados para la ejecuciÃ³n"),
+    NO_PROCESS_READY("No hay procesos listos en la cola para ejecutarse");
+
+    public final String description;
+
+    ErrorCode(java.lang.String description) {
+        this.description = description;
+    }
+}
Index: .idea/libraries/Maven__com_formdev_flatlaf_intellij_themes_1_6_5.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_formdev_flatlaf_intellij_themes_1_6_5.xml b/.idea/libraries/Maven__com_formdev_flatlaf_intellij_themes_1_6_5.xml
new file mode 100644
--- /dev/null	(date 1639498395171)
+++ b/.idea/libraries/Maven__com_formdev_flatlaf_intellij_themes_1_6_5.xml	(date 1639498395171)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.formdev:flatlaf-intellij-themes:1.6.5">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/formdev/flatlaf-intellij-themes/1.6.5/flatlaf-intellij-themes-1.6.5.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/formdev/flatlaf-intellij-themes/1.6.5/flatlaf-intellij-themes-1.6.5-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/formdev/flatlaf-intellij-themes/1.6.5/flatlaf-intellij-themes-1.6.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
